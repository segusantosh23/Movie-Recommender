
import React, { useState, useContext, useEffect } from 'react';
import { AuthContext } from '../contexts/AuthContext';
// Fix: Use namespace import for react-router-dom
import * as ReactRouterDOM from 'react-router-dom';
import Logo from '../components/Logo';

const Auth: React.FC = () => {
  const [agreed, setAgreed] = useState(false);
  const authContext = useContext(AuthContext);
  const navigate = ReactRouterDOM.useNavigate();

  useEffect(() => {
    // If user has already agreed in a previous session, redirect to home
    if (authContext?.user) {
      navigate('/home');
    }
  }, [authContext, navigate]);
  
  const handleContinue = () => {
    if (agreed && authContext) {
      authContext.login({ username: 'Guest' });
      navigate('/home');
    }
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen relative p-4 bg-white dark:bg-black transition-colors duration-300">
      <div 
        className="absolute inset-0 bg-cover bg-center"
        style={{ backgroundImage: `url('https://image.tmdb.org/t/p/original/rSPw7Vjmk3Mdo4N32jw62s7wQax.jpg')` }}
      >
        <div className="absolute inset-0 bg-black/60 backdrop-blur-sm"></div>
      </div>
      
      <div className="relative z-10 flex flex-col items-center">
        <div className="mb-8">
            <Logo />
        </div>
        <div className="w-full max-w-md md:max-w-lg lg:max-w-xl p-8 space-y-6 bg-black/50 backdrop-blur-lg border border-slate-700 rounded-2xl shadow-2xl">
            <div>
              <h2 className="text-3xl font-extrabold text-center text-white">
                  Terms and Conditions
              </h2>
              <p className="mt-2 text-center text-sm text-slate-400">Please read and agree to the terms before continuing.</p>
            </div>
            
            <div className="text-sm text-slate-300 h-48 overflow-y-auto p-4 bg-slate-800/50 rounded-lg border border-slate-600 scrollbar-hide">
              <h3 className="font-bold mb-2">1. Introduction</h3>
              <p className="mb-4">Welcome to Movie Recommender. By using our application, you agree to be bound by these terms and conditions. If you do not agree to these terms, please do not use the application.</p>
              
              <h3 className="font-bold mb-2">2. Use of Service</h3>
              <p className="mb-4">This service is provided for personal, non-commercial use only. You agree not to use the service for any illegal or unauthorized purpose. You are responsible for your own conduct and content while using the service.</p>
              
              <h3 className="font-bold mb-2">3. Intellectual Property</h3>
              <p className="mb-4">All content provided on the service, including text, graphics, logos, and images, is the property of Movie Recommender or its content suppliers and is protected by international copyright laws. Movie data and images are provided by The Movie Database (TMDb).</p>

              <h3 className="font-bold mb-2">4. Disclaimers</h3>
              <p className="mb-4">The service is provided "as is" without any warranties of any kind. We do not guarantee the accuracy, completeness, or timeliness of the information provided. Recommendations are generated by AI and may not always be suitable.</p>

              <h3 className="font-bold mb-2">5. Limitation of Liability</h3>
              <p className="mb-4">In no event shall Movie Recommender be liable for any direct, indirect, incidental, special, or consequential damages arising out of or in connection with your use of the service.</p>
            </div>

            <div className="flex items-center">
              <input
                id="agree-checkbox"
                name="agree-checkbox"
                type="checkbox"
                checked={agreed}
                onChange={(e) => setAgreed(e.target.checked)}
                className="h-4 w-4 text-cyan-500 bg-slate-700 border-slate-600 rounded focus:ring-cyan-500"
              />
              <label htmlFor="agree-checkbox" className="ml-2 block text-sm text-slate-300">
                I have read and agree to the Terms and Conditions.
              </label>
            </div>

            <div>
                <button 
                  onClick={handleContinue} 
                  disabled={!agreed}
                  className="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-bold rounded-lg text-white bg-gradient-to-r from-blue-600 to-cyan-500 hover:from-blue-700 hover:to-cyan-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-black focus:ring-cyan-500 transition-all duration-300 transform hover:scale-105 disabled:bg-slate-500 disabled:from-slate-500 disabled:to-slate-600 disabled:cursor-not-allowed disabled:scale-100"
                >
                  Continue
                </button>
            </div>
        </div>
      </div>
    </div>
  );
};

export default Auth;
